/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.custom.chat.services.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ChatUser service. Represents a row in the &quot;CHAT_ChatUser&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.custom.chat.services.service.model.impl.ChatUserModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.custom.chat.services.service.model.impl.ChatUserImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ChatUser
 * @generated
 */
@ProviderType
public interface ChatUserModel extends BaseModel<ChatUser> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a chat user model instance should use the {@link ChatUser} interface instead.
	 */

	/**
	 * Returns the primary key of this chat user.
	 *
	 * @return the primary key of this chat user
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this chat user.
	 *
	 * @param primaryKey the primary key of this chat user
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the user ID of this chat user.
	 *
	 * @return the user ID of this chat user
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this chat user.
	 *
	 * @param userId the user ID of this chat user
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this chat user.
	 *
	 * @return the user uuid of this chat user
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this chat user.
	 *
	 * @param userUuid the user uuid of this chat user
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the full name of this chat user.
	 *
	 * @return the full name of this chat user
	 */
	@AutoEscape
	public String getFullName();

	/**
	 * Sets the full name of this chat user.
	 *
	 * @param fullName the full name of this chat user
	 */
	public void setFullName(String fullName);

	/**
	 * Returns the avatar of this chat user.
	 *
	 * @return the avatar of this chat user
	 */
	@AutoEscape
	public String getAvatar();

	/**
	 * Sets the avatar of this chat user.
	 *
	 * @param avatar the avatar of this chat user
	 */
	public void setAvatar(String avatar);

	/**
	 * Returns the badge of this chat user.
	 *
	 * @return the badge of this chat user
	 */
	public int getBadge();

	/**
	 * Sets the badge of this chat user.
	 *
	 * @param badge the badge of this chat user
	 */
	public void setBadge(int badge);

	@Override
	public ChatUser cloneWithOriginalValues();

}